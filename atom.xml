<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Solen&#39;blog</title>
  
  <subtitle>solen的博客</subtitle>
  <link href="https://www.solen.ml/atom.xml" rel="self"/>
  
  <link href="https://www.solen.ml/"/>
  <updated>2022-06-27T18:51:05.771Z</updated>
  <id>https://www.solen.ml/</id>
  
  <author>
    <name>Solen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>黑马程序员HTML笔记</title>
    <link href="https://www.solen.ml/2022/06/28/heima-html-note/"/>
    <id>https://www.solen.ml/2022/06/28/heima-html-note/</id>
    <published>2022-06-27T17:05:27.000Z</published>
    <updated>2022-06-27T18:51:05.771Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：学习黑马前端的笔记，课程学习请访问B站<a href="https://www.bilibili.com/video/BV14J4114768?vd_source=0a7e7a89126208016b0448e9492b9156">黑马程序员pink老师前端入门教程</a><span id="more"></span></p><hr><h3 id="前端学习基础路线"><a href="#前端学习基础路线" class="headerlink" title="前端学习基础路线"></a>前端学习基础路线</h3><p>HTML5基础  ➡️ CSS3基础 ➡️ H5C3 ➡️ 品优购网站项目</p><h3 id="前端技术查阅资料"><a href="#前端技术查阅资料" class="headerlink" title="前端技术查阅资料"></a>前端技术查阅资料</h3><ol><li>W3C: <a href="http://www.w3school.com.cn/">http://www.w3school.com.cn/</a> </li><li>MDN: <a href="https://developer.mozilla.org/zh-CN/">https://developer.mozilla.org/zh-CN/</a></li></ol><p><strong>网友笔记：</strong><a href="https://mp.weixin.qq.com/s/lNkLbVL8qWsay8c3krVL8A">「学习笔记」HTML基础</a></p><hr><h3 id="一、HTML简介"><a href="#一、HTML简介" class="headerlink" title="一、HTML简介"></a>一、HTML简介</h3><h4 id="1-网页"><a href="#1-网页" class="headerlink" title="1.网页"></a>1.网页</h4><ol><li><p>什么是网页：</p><p> 网站是指在因特网上根据一定的规则，使用 HTML 等制作的用于展示特定内容相关的网页集合。</p><p> 网页是网站中的一“页”，通常是 HTML 格式的文件，它要通过浏览器来阅读。</p><p> 网页是构成网站的基本元素，它通常由图片、链接、文字、声音、视频等元素组成。通常我们看到的网页， 常见以 .htm 或 .html 后缀结尾的文件，因此将其俗称为 HTML 文件。</p></li><li><p>什么是HTML：</p><p> HTML 指的是超文本标记语言 (Hyper Text Markup Language) ，它是用来描述网页的一种语言。</p><p> HTML 不是一种编程语言，而是一种标记语言 (markup language)。</p><p> 标记语言是一套标记标签 (markup tag)。</p><blockquote><p><strong><em>所谓超文本，有 2 层含义:</em></strong></p><ol><li>它可以加入图片、声音、动画、多媒体等内容(超越了文本限制 )。</li><li>它还可以从一个文件跳转到另一个文件，与世界各地主机的文件连接(超级链接文本 )。</li></ol></blockquote></li><li>网页的形成：<br> 网页是由网页元素组成的，这些元素是利用 html 标签描述出来，然后通过浏览器解析来显示给用户的。</li></ol><h4 id="2-常用浏览器"><a href="#2-常用浏览器" class="headerlink" title="2.常用浏览器"></a>2.常用浏览器</h4><ol><li>常用浏览器</li><li><p>浏览器内核</p><p> 浏览器内核(渲染引擎): 负责读取网页内容，整理讯息，计算网页的显示方式并显示页面。</p><p> | 浏览器 | 内核 | 备注 |<br> | —- | —- | —- |<br> | IE | Trident | IE、猎豹安全、360极速浏览器、百度浏览器 |<br> | firefox | Gecko | 火狐浏览器 |<br> | Safari | Webkit | 苹果浏览器 |<br> |  chrome/Opera | Blink | chrome/opera浏览器内核。Blink属于Webkit的分支。 |</p><p> 目前国内一般浏览器都会采用 Webkit/Blink 内核，如 360、UC、QQ、搜狗等。</p></li></ol><h4 id="3-Web标准（重点）"><a href="#3-Web标准（重点）" class="headerlink" title="3.Web标准（重点）"></a>3.Web标准（重点）</h4><p><a href="https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web/The_web_and_web_standards">Web 标准</a>是由 W3C 组织和其他标准化组织制定的一系列标准的集合。W3C(万维网联盟)是国际最著名的标准化组织。</p><ol><li><p>为什么需要Web标准</p><p> 遵循 Web 标准除了可以让不同的开发人员写出的页面更标准、更统一外，还有以下优点:</p><ul><li>让Web的发展前景更广阔</li><li>内容能被更广泛的的设备访问</li><li>更容易被搜寻引擎搜索</li><li>降低网站流量费用</li><li>使网站更易于维护</li><li>提高页面浏览速度</li></ul></li><li><p>Web标准的构成</p><p> 主要包括结构（Structure）、表现（Presentation）和行为（Behavior）三个方面。</p><p> | 标准 | 说明 |<br> | —- | —- |<br> | Structure | 结构用于对网页元素进行整理和分类，现阶段主要学的是HTML。 |<br> | Presentation | 表现用于设置网页元素的版式、颜色、大小等外观样式，主要指的是CSS。 |<br> | Behavior | 行为指的是网页模型的定义及交互的编写，现阶段主要学的是Javascript。 |</p><p> Web标准提出的最佳体验方案：结构、样式、行为相分离。</p><p> 简单理解：结构写到 HTML 文件中， 表现写到 CSS 文件中， 行为写到 JavaScript 文件中。</p></li></ol><hr><h3 id="二、HTML标签（上）"><a href="#二、HTML标签（上）" class="headerlink" title="二、HTML标签（上）"></a>二、HTML标签（上）</h3><h3 id="1-HTML语法规范"><a href="#1-HTML语法规范" class="headerlink" title="1.HTML语法规范"></a>1.HTML语法规范</h3><ol><li><p>基本语法概述</p><p> HTML 标签是由尖括号包围的关键词，例如 <html>。</p><p> HTML 标签通常是成对出现的，例如 <html> 和 </html> ，我们称为双标签。</p><p> 标签中的第一个标签是开始标签，第二个标签是结束标签。</p><p> 有些特殊的标签必须是单个标签(极少情况)，例如 <br />，我们称为单标签。</p></li><li><p>标签关系</p><p> 双标签关系可以分为两类：包含关系和并列关系。</p><p> 包含关系：</p> <head> <title></title> </head><p> 并列关系：</p> <head></head> <body></body></li></ol><h3 id="2-HTML基本结构标签"><a href="#2-HTML基本结构标签" class="headerlink" title="2.HTML基本结构标签"></a>2.HTML基本结构标签</h3><ol><li><p>第一个HTML网页</p><p> 每个网页都会有一个基本的结构标签(也称为骨架标签)，页面内容也是在这些基本标签上书写。</p><p> | 标签名 | 定义 | 说明 |<br> | —- | —- | —- |<br> | <html></html> | HTML标签 | 页面中的最大标签，也称为根标签。 |<br> | <head></head> | 文档的头部 | 注意在head标签中我们必须设置的标签是title标签 |<br> | <title></title> | 文档的标题 | 让页面拥有一个属于自己的网页标题。 |<br> | <body></body> | 文档的主体 | 元素包含文档的所有内容，页面内容基本都是放到body标签里面的。 |</p><p> HTML页面也称为HTML文档。</p><p> HTML 文档的的后缀名必须是 .html 或 .htm ，浏览器的作用是读取 HTML 文档，并以网页的形式显示出它们。</p><p> 用浏览器打开这个页面，我们就可以预览我们写的第一个HTML页面文件了。</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>我的第一个页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">好好学习，天天向上。</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>基本结构标签总结</p><p> <img src="HTML%E5%AD%A6%E4%B9%A0%205fb680bc5a114c5381f1565e33ebca11/HTML%E9%A1%B5%E9%9D%A2%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E6%A0%87%E7%AD%BE.png" alt="HTML页面基本结构标签.png"></p></li></ol><h3 id="3-网页开发工具（vscode）"><a href="#3-网页开发工具（vscode）" class="headerlink" title="3.网页开发工具（vscode）"></a>3.网页开发工具（vscode）</h3><p><strong><a href="https://www.w3cschool.cn/html5/html5-tool.html">推荐11款程序员必备的HTML5开发工具</a></strong></p><ol><li><p>VScode的使用</p><p> 这个部分对于软件熟练使用后就好。</p></li><li><p>VScode工具生成骨架标签新增代码：</p><p> &lt;!DOCTYPE&gt;标签</p><p> lang 语言</p><p> charset字符集</p></li><li><p>文档类型声明标签</p><p> &lt;!DOCTYPE&gt;文档类型声明，告诉浏览器使用哪种html版本来显示网页。</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line">这句代码的意思是: 当前页面采取的是 HTML5 版本来显示网页。</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">1. <span class="meta">&lt;!DOCTYPE&gt;</span> 声明位于文档中的最前面位置，处于 <span class="tag">&lt;<span class="name">html</span>&gt;</span> 标签之前。</span><br><span class="line">2. <span class="meta">&lt;!DOCTYPE&gt;</span>不是一个HTML标签，它就是文档类型声明标签。</span><br></pre></td></tr></table></figure></li><li><p>lang语言种类</p><p> 用来定义当前文档显示的语言。en定义语言为英语。zh-CN定义语言为中文。</p><p> 简单来说,定义为en 就是英文网页, 定义为 zh-CN 就是中文网页。</p><p> 其实对于文档显示来说，定义成en的文档也可以显示中文，定义成zh-CN的文档也可以显示英文。</p><p> 这个属性对浏览器和搜索引擎(百度.谷歌等)还是有作用的。</p></li><li><p>字符集</p><p> 字符集 (Character set)是多个字符的集合。以便计算机能够识别和存储各种文字。</p><p> 在<head>标签内，可以通过<meta> 标签的 charset 属性来规定 HTML 文档应该使用哪种字符编码。</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">charset 常用的值有:GB2312 、BIG5 、GBK 和 UTF-8，其中 UTF-8 也被称为万国码，</span><br><span class="line">基本包含了全世界所 有国家需要用到的字符。</span><br><span class="line"></span><br><span class="line">注意:</span><br><span class="line">上面语法是必须要写的代码，否则可能引起乱码的情况。</span><br><span class="line">一般情况下，统一使用“UTF-8”编码，尽量统一写成标准的 &quot;UTF-8&quot;，不要写成 &quot;utf8&quot; 或 &quot;UTF8&quot;。</span><br></pre></td></tr></table></figure></li></ol><h3 id="4-HTML常用标签"><a href="#4-HTML常用标签" class="headerlink" title="4.HTML常用标签"></a>4.HTML常用标签</h3><ol><li><p>标签语义</p><p> 学习标签是有技巧的，重点是记住每个标签的语义。简单理解就是指标签的含义，即这个标签是用来干嘛的。</p><p> 根据标签的语义，在合适的地方给一个最为合理的标签，可以让页面结构更清晰。</p></li><li><p><strong>标题标签</strong></p><p> HTML 提供了 6 个等级的网页标题，即\<h1> - \<h6>。</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>标题一共六级选,<span class="tag">&lt;/<span class="name">h1</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>文字加粗一行显。<span class="tag">&lt;/<span class="name">h2</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>由大到小依次减，<span class="tag">&lt;/<span class="name">h3</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>从重到轻随之变。<span class="tag">&lt;/<span class="name">h4</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>语法规范书写后，<span class="tag">&lt;/<span class="name">h5</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>具体效果刷新见。<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line">           ------pink老师</span><br></pre></td></tr></table></figure><p> 单词 head 的缩写，意为头部、标题。<br> 标签语义:作为标题使用，并且依据重要性递减。</p><p> 特点：</p><p> （1）加了标题的文字会变的加粗，字号也会依次变大。</p><p> （2）一个标题独占一行。</p></li><li><p><strong>段落标签<p></strong></p><p> 在 HTML 标签中，<p>标签用于定义段 落，它可以将整个网页分为若干个段落。</p><p> 单词 paragraph [ˈpærəgræf] 的缩写，意为段落。</p><p> 特点：</p><p> （1）文本在一个段落中会根据浏览器窗口的大小自动换行。</p><p> （2）段落和段落之间保有空隙。</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是一个段落标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>换行标签<br/></strong>(单标签）</p><p> 在 HTML 中，一个段落中的文字会从左到右依次排列，直到浏览器窗口的右端，然后才自动换行。如果希望 某段文本强制换行显示，就需要使用换行标签 <br />。</p><p> 单词 break 的缩写，意为打断、换行。</p><p> 标签语义:强制换行。</p><p> 特点：</p><p> （1）<br /> 是个单标签。</p><p> （2）<br /> 标签只是简单地开始新的一行，跟段落不一样，段落之间会插入一些垂直的间距。</p></li><li><p><strong>文本格式化标签</strong></p></li></ol><pre><code>| 语义 | 标签 | 说明 || --- | --- | --- || 加粗 | \&lt;strong&gt;\&lt;/strong&gt;或\&lt;b&gt;\&lt;/b&gt; | 推荐，语义更加强烈。 || 倾斜 | \&lt;em&gt;\&lt;/em&gt;或\&lt;i&gt;\&lt;/i&gt; | 推荐，语义更加强烈。 || 删除线 | \&lt;del&gt;\&lt;/del&gt;或\&lt;s&gt;\&lt;/s&gt; | 推荐，语义更加强烈。 || 下划线 | \&lt;ins&gt;\&lt;/ins&gt;或\&lt;u&gt;\&lt;/u&gt; | 推荐，语义更加强烈。 |</code></pre><ol><li><p><strong>\<div>和\<span>标签</strong></p><p> \<div> 和 \<span> 是没有语义的，它们就是一个盒子，用来装内容的。</p><p> div 是 division 的缩写，表示分割、分区。span 意为跨度、跨距。</p><p> 特点：<br> （1）\<div> 标签用来布局，但是现在一行只能放一个\<div>。 大盒子</p><p> （2）\<span> 标签用来布局，一行上可以多个 \<span>。小盒子</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span> 这是头部 <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span> 今日价格 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>图像标签</strong></p><p> 在 HTML 标签中，\<img> 标签用于定义 HTML 页面中的图像。单词 image 的缩写，意为图像。</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图像URL&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p> src 是\<img>标签的必须属性，它用于指定图像文件的路径和文件名。</p><p> 所谓属性:简单理解就是属于这个图像标签的特性。</p><p> 图像标签的其他属性:</p><p> | 属性 | 属性值 | 说明 |<br> | —- | —- | —- |<br> | src | 图片路径 | 必须属性 |<br> | alt | 文本 | 替换文本。图像不能显示时的文字 |<br> | title | 文本 | 提示文本。鼠标放到图像上，显示的文字 |<br> | width | 像素 | 设置图像的宽度 |<br> | height | 像素 | 设置图像的高度 |<br> | border | 像素 | 设置图像的边框粗细 |</p><p> <strong>图像标签属性注意点:</strong></p><p> 图像标签可以拥有多个属性，必须写在标签名的后面。</p><p> 属性之间不分先后顺序，标签名与属性、属性与属性之间均以空格分开。</p><p> 属性采取键值对的格式，即 key=“value” 的格式，属性 =“属性值”。</p></li><li><p><strong>路径</strong> </p><p> 绝对路径</p><p> 相对路径</p><p> 这一部分属于计算机基础，熟练使用即可。</p></li><li><p><strong>超链接标签（important!）</strong></p><p> 在 HTML 标签中，<a> 标签用于定义超链接，作用是从一个页面链接到另一个页面。</p><p> <strong>(1) 链接的语法格式</strong></p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;跳转目标&quot;</span> <span class="attr">target</span>=<span class="string">&quot;目标窗口的弹出方式&quot;</span>&gt;</span> 文本或图像 <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p> 单词 anchor [ˈæŋkə(r)] 的缩写，意为:锚。</p><p> 两个属性的作用如下:</p><p> | 属性 | 作用 |<br> | —- | —- |<br> | href | 用于指定链接目标的url地址，必须属性，当为标签应用href属性时候，它就有了超链接功能。 |<br> | target | 用于指定链接页面的打开方式，其中_self为默认值，_blank为在新窗口中打开方式。 |</p><p> <strong>（2）链接分类</strong></p><p> | 链接分类 | 说明 |<br> | —- | —- |<br> | 外部链接 | 例如 &lt; a href=”http:// www.baidu.com “&gt; 百度&lt;/a &gt;。 |<br> | 内部链接 | 网站内部页面之间的相互链接. 直接链接内部页面名称即可，例如 &lt; a href=”index.html”&gt; 首页 &lt;/a &gt; |<br> | 空链接 | 如果当时没有确定链接目标时，&lt; a href=”#”&gt; 首页 &lt;/a &gt;  |<br> | 下载链接 | 如果 href 里面地址是一个文件或者压缩包，会下载这个文件 |<br> | 网页元素链接 | 在网页中的各种网页元素，如文本、图像、表格、音频、视频等都可以添加超链接 |<br> | 锚点链接 | 点我们点击链接,可以快速定位到页面中的某个位置 |</p><p> 锚点链接使用方法：</p><ol><li><p>在链接文本的 href 属性中，设置属性值为 #名字 的形式，如:<a href="#two"> 第2集 </a></p></li><li><p>找到目标位置标签，里面添加一个 id 属性 = 刚才的名字 ，如:<h3 id="two">第2集介绍</h3></p></li></ol></li><li><p><strong>注释</strong></p><p>如果需要在 HTML 文档中添加一些便于阅读和理解但又不需要显示在页面中的注释文字，就需要使用注释标签。</p><p>HTML中的注释以“<!--”开头，以“ -->”结束。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注释语句 --&gt;</span> </span><br><span class="line">快捷键: ctrl + /</span><br></pre></td></tr></table></figure></li><li><p><strong>特殊字符</strong></p><p>在 HTML 页面中，一些特殊的符号很难或者不方便直接使用，此时我们就可以使用下面的字符来替代。</p><p><img src="HTML%E5%AD%A6%E4%B9%A0%205fb680bc5a114c5381f1565e33ebca11/html%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6.png" alt="html特殊字符.png"></p><p>重点记住:空格 、大于号、 小于号 这三个， 其余的使用很少，如果需要回头查阅即可。</p><p>小于号：&lt; meanings less than</p><p>大于号：&gt; meanings great than</p></li></ol><hr><h2 id="三、HTML标签（下）"><a href="#三、HTML标签（下）" class="headerlink" title="三、HTML标签（下）"></a>三、HTML标签（下）</h2><h3 id="1-表格标签（显示数据）"><a href="#1-表格标签（显示数据）" class="headerlink" title="1.表格标签（显示数据）"></a>1.表格标签（显示数据）</h3><p><img src="HTML%E5%AD%A6%E4%B9%A0%205fb680bc5a114c5381f1565e33ebca11/%E8%A1%A8%E6%A0%BC%E6%A0%87%E7%AD%BE.png" alt="表格标签.png"></p><h3 id="2-列表标签（页面布局）"><a href="#2-列表标签（页面布局）" class="headerlink" title="2.列表标签（页面布局）"></a>2.列表标签（页面布局）</h3><p><img src="HTML%E5%AD%A6%E4%B9%A0%205fb680bc5a114c5381f1565e33ebca11/%E5%88%97%E8%A1%A8%E6%A0%87%E7%AD%BE.png" alt="列表标签.png"></p><h3 id="3-表单标签"><a href="#3-表单标签" class="headerlink" title="3.表单标签"></a>3.表单标签</h3><p>目的：收集用户信息，跟用户进行交互，通常是注册表。</p><p>在 HTML 中，一个完整的表单通常由表单域、表单控件(也称为表单元素)和 提示信息3个部分构成。</p><p><a href="HTML%E5%AD%A6%E4%B9%A0%205fb680bc5a114c5381f1565e33ebca11/html%E7%AC%AC%E4%BA%8C%E5%A4%A9.xmind">html第二天.xmind</a></p><hr>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：学习黑马前端的笔记，课程学习请访问B站&lt;a href=&quot;https://www.bilibili.com/video/BV14J4114768?vd_source=0a7e7a89126208016b0448e9492b9156&quot;&gt;黑马程序员pink老师前端入门教程&lt;/a&gt;</summary>
    
    
    
    <category term="Front-end" scheme="https://www.solen.ml/categories/Front-end/"/>
    
    
    <category term="HTML" scheme="https://www.solen.ml/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>jdie</title>
    <link href="https://www.solen.ml/2022/06/26/jdie/"/>
    <id>https://www.solen.ml/2022/06/26/jdie/</id>
    <published>2022-06-25T17:32:21.000Z</published>
    <updated>2022-06-25T17:33:33.891Z</updated>
    
    <content type="html"><![CDATA[<p>这是一个介绍<span id="more"></span><br>正文开始：</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这是一个介绍</summary>
    
    
    
    <category term="photo" scheme="https://www.solen.ml/categories/photo/"/>
    
    
  </entry>
  
  <entry>
    <title>10 useful vim shortcuts</title>
    <link href="https://www.solen.ml/2022/06/24/10-useful-vim-shortcuts/"/>
    <id>https://www.solen.ml/2022/06/24/10-useful-vim-shortcuts/</id>
    <published>2022-06-23T18:30:52.000Z</published>
    <updated>2022-06-23T18:47:58.964Z</updated>
    
    <content type="html"><![CDATA[<p>Reprinted from <a href="https://catonmat.net/top-10-vim-shortcuts">Peter Krumins:10 useful vimshorts</a></p><h3 id="gi"><a href="#gi" class="headerlink" title="gi"></a>gi</h3><p>Typing gi in normal mode moves the cursor to the last place you were editing and instantly puts you in insert mode.</p><h3 id="Ctrl-o-and-Ctrl-i"><a href="#Ctrl-o-and-Ctrl-i" class="headerlink" title="Ctrl+o and Ctrl+i"></a>Ctrl+o and Ctrl+i</h3><p>In normal mode, jumps to the previous (Ctrl+o) or next (Ctrl+i) place where cursor recently has been.</p><h3 id="Ctrl-a-and-Ctrl-z"><a href="#Ctrl-a-and-Ctrl-z" class="headerlink" title="Ctrl+a and Ctrl+z"></a>Ctrl+a and Ctrl+z</h3><p>In normal mode, increment and decrement the number under the cursor. Additionally, the speeddating vim plugin makes these two shortcuts more powerful and you can also increment and decrement calendar dates under the cursor.</p><h3 id="Ctrl-e-and-Ctrl-y-in-normal-mode"><a href="#Ctrl-e-and-Ctrl-y-in-normal-mode" class="headerlink" title="Ctrl+e and Ctrl+y in normal mode"></a>Ctrl+e and Ctrl+y in normal mode</h3><p>In normal mode, scroll the current buffer one line up (Ctrl+e) or down (Ctrl+y).</p><h3 id="Ctrl-e-and-Ctrl-y-in-insert-mode"><a href="#Ctrl-e-and-Ctrl-y-in-insert-mode" class="headerlink" title="Ctrl+e and Ctrl+y in insert mode"></a>Ctrl+e and Ctrl+y in insert mode</h3><p>In insert mode, copy text character-by-character from the line below (Ctrl+e) or line above (Ctrl+y).</p><h3 id="and"><a href="#and" class="headerlink" title="{ and }"></a>{ and }</h3><p>In normal mode, go to previous/next paragraph.</p><h3 id="gt-gt-and-lt-lt"><a href="#gt-gt-and-lt-lt" class="headerlink" title="&gt;&gt; and &lt;&lt;"></a>&gt;&gt; and &lt;&lt;</h3><p>In normal or visual mode, shift the line (or selection) one indent to the right (&gt;&gt;) or left (&lt;&lt;).</p><h3 id="Ctrl-n-and-Ctrl-p"><a href="#Ctrl-n-and-Ctrl-p" class="headerlink" title="Ctrl+n and Ctrl+p"></a>Ctrl+n and Ctrl+p</h3><p>In insert mode, complete the current word under the cursor from the word following it (Ctrl+n) or words preceding it (Ctrl+p).</p><h3 id="Ctrl-j"><a href="#Ctrl-j" class="headerlink" title="Ctrl+j"></a>Ctrl+j</h3><p>In insert mode, join the current line with the next line.</p><h3 id="zz-two-lowercase-z’s-in-normal-mode"><a href="#zz-two-lowercase-z’s-in-normal-mode" class="headerlink" title="zz (two lowercase z’s in normal mode)"></a>zz (two lowercase z’s in normal mode)</h3><p>Center the buffer so that the current line you’re editing is in the middle of the screen.</p><h3 id="ZZ-two-capital-Z’s-in-normal-mode"><a href="#ZZ-two-capital-Z’s-in-normal-mode" class="headerlink" title="ZZ (two capital Z’s in normal mode)"></a>ZZ (two capital Z’s in normal mode)</h3><p>In normal mode, same as :wq!. Saves and exits vim.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Reprinted from &lt;a href=&quot;https://catonmat.net/top-10-vim-shortcuts&quot;&gt;Peter Krumins:10 useful vimshorts&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;gi&quot;&gt;&lt;a href=&quot;#gi&quot; cl</summary>
      
    
    
    
    <category term="web" scheme="https://www.solen.ml/categories/web/"/>
    
    
    <category term="Linux" scheme="https://www.solen.ml/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>备注一下</title>
    <link href="https://www.solen.ml/2022/06/23/beizhu/"/>
    <id>https://www.solen.ml/2022/06/23/beizhu/</id>
    <published>2022-06-22T20:00:05.000Z</published>
    <updated>2022-06-23T17:57:51.373Z</updated>
    
    <content type="html"><![CDATA[<p>第一创建博客备注<span id="more"></span></p><h2 id="需要学习的点"><a href="#需要学习的点" class="headerlink" title="需要学习的点"></a>需要学习的点</h2><h3 id="图床的使用-jsdelivr"><a href="#图床的使用-jsdelivr" class="headerlink" title="图床的使用 jsdelivr"></a>图床的使用 jsdelivr</h3><h3 id="markdown高级语法学习"><a href="#markdown高级语法学习" class="headerlink" title="markdown高级语法学习"></a>markdown高级语法学习</h3><h3 id="book和links版款升级"><a href="#book和links版款升级" class="headerlink" title="book和links版款升级"></a>book和links版款升级</h3><p><img src="https://fastly.jsdelivr.net/gh/solenshelby/image-host@main/img/maomao.jpg" alt=""></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;第一创建博客备注</summary>
    
    
    
    <category term="Hexo" scheme="https://www.solen.ml/categories/Hexo/"/>
    
    
    <category term="blog" scheme="https://www.solen.ml/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>909090</title>
    <link href="https://www.solen.ml/2022/06/23/909090/"/>
    <id>https://www.solen.ml/2022/06/23/909090/</id>
    <published>2022-06-22T18:25:14.000Z</published>
    <updated>2022-06-23T18:25:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章描述<span id="more"></span><br><img src="https://cdn.jsdelivr.net/gh/hwame/pics@main/avatar.jpg?200x200" alt="avatar"><br>正文开始：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">code &#123;</span><br><span class="line">  text-shadow: 0 1px #fff;</span><br><span class="line">  padding: 0.2em 0.4em;</span><br><span class="line">  margin: 0 0.3em;</span><br><span class="line">  color: #FF4500;</span><br><span class="line">  /* 行内代码颜色及背景 */</span><br><span class="line">  background: #F0FFFF;</span><br><span class="line">  border-radius: 3px;</span><br><span class="line">  font-size: 85%;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;文章描述</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>9090</title>
    <link href="https://www.solen.ml/2022/06/23/9090/"/>
    <id>https://www.solen.ml/2022/06/23/9090/</id>
    <published>2022-06-22T16:49:22.000Z</published>
    <updated>2022-06-22T20:06:57.685Z</updated>
    
    <content type="html"><![CDATA[<p>文章描述<span id="more"></span></p><h2 id="wwnhznag"><a href="#wwnhznag" class="headerlink" title="wwnhznag"></a>wwnhznag</h2><h3 id="hdeihi"><a href="#hdeihi" class="headerlink" title="hdeihi"></a>hdeihi</h3><h3 id="hidei"><a href="#hidei" class="headerlink" title="hidei"></a>hidei</h3><h2 id="fri"><a href="#fri" class="headerlink" title="fri"></a>fri</h2>]]></content>
    
    
    <summary type="html">&lt;p&gt;文章描述</summary>
    
    
    
    <category term="photo" scheme="https://www.solen.ml/categories/photo/"/>
    
    
    <category term="标签" scheme="https://www.solen.ml/tags/%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>2990</title>
    <link href="https://www.solen.ml/2022/06/23/2990/"/>
    <id>https://www.solen.ml/2022/06/23/2990/</id>
    <published>2022-06-22T16:02:27.000Z</published>
    <updated>2022-06-22T20:05:44.262Z</updated>
    
    <content type="html"><![CDATA[<p>文章描述<span id="more"></span><br>这是一片置顶文章</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;文章描述</summary>
    
    
    
    <category term="photo" scheme="https://www.solen.ml/categories/photo/"/>
    
    
    <category term="标签 新的标签 标签测试 标签1" scheme="https://www.solen.ml/tags/%E6%A0%87%E7%AD%BE-%E6%96%B0%E7%9A%84%E6%A0%87%E7%AD%BE-%E6%A0%87%E7%AD%BE%E6%B5%8B%E8%AF%95-%E6%A0%87%E7%AD%BE1/"/>
    
  </entry>
  
  <entry>
    <title>100</title>
    <link href="https://www.solen.ml/2022/06/22/100/"/>
    <id>https://www.solen.ml/2022/06/22/100/</id>
    <published>2022-06-22T15:57:14.000Z</published>
    <updated>2022-06-22T20:07:18.515Z</updated>
    
    <content type="html"><![CDATA[<p>文章描述<span id="more"></span><br>正文开始：</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;文章描述</summary>
    
    
    
    <category term="photo1" scheme="https://www.solen.ml/categories/photo1/"/>
    
    
    <category term="标签" scheme="https://www.solen.ml/tags/%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>4</title>
    <link href="https://www.solen.ml/2022/06/22/4/"/>
    <id>https://www.solen.ml/2022/06/22/4/</id>
    <published>2022-06-22T11:21:06.000Z</published>
    <updated>2022-06-22T11:21:06.140Z</updated>
    
    <content type="html"><![CDATA[<p>文章描述<span id="more"></span><br>正文开始：</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;文章描述</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>3</title>
    <link href="https://www.solen.ml/2022/06/22/3/"/>
    <id>https://www.solen.ml/2022/06/22/3/</id>
    <published>2022-06-22T11:21:02.000Z</published>
    <updated>2022-06-27T17:40:53.521Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：这是个文章摘要尝试<span id="more"></span></p><h2 id="标题1"><a href="#标题1" class="headerlink" title="标题1"></a>标题1</h2><h2 id="标题2"><a href="#标题2" class="headerlink" title="标题2"></a>标题2</h2><h2 id="标题3"><a href="#标题3" class="headerlink" title="标题3"></a>标题3</h2><h3 id="三级目录不需要编号"><a href="#三级目录不需要编号" class="headerlink" title="三级目录不需要编号"></a>三级目录不需要编号</h3><p><code><br>diehi</code></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：这是个文章摘要尝试</summary>
    
    
    
    <category term="photo" scheme="https://www.solen.ml/categories/photo/"/>
    
    
    <category term="标签测试" scheme="https://www.solen.ml/tags/%E6%A0%87%E7%AD%BE%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>2</title>
    <link href="https://www.solen.ml/2022/06/22/2/"/>
    <id>https://www.solen.ml/2022/06/22/2/</id>
    <published>2022-06-22T11:20:57.000Z</published>
    <updated>2022-06-27T17:40:59.888Z</updated>
    
    <content type="html"><![CDATA[<p>文章描述<span id="more"></span><br>正文开始：</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;文章描述</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>黑马程序员CSS笔记</title>
    <link href="https://www.solen.ml/2022/06/22/heima_css_note/"/>
    <id>https://www.solen.ml/2022/06/22/heima_css_note/</id>
    <published>2022-06-22T11:20:46.000Z</published>
    <updated>2022-06-27T18:51:11.823Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：学习黑马前端的笔记，课程学习请访问B站<a href="https://www.bilibili.com/video/BV14J4114768?vd_source=0a7e7a89126208016b0448e9492b9156">黑马程序员pink老师前端入门教程</a><span id="more"></span></p><h2 id="Section-1"><a href="#Section-1" class="headerlink" title="Section 1"></a>Section 1</h2><h2 id="一、CSS简介"><a href="#一、CSS简介" class="headerlink" title="一、CSS简介"></a>一、CSS简介</h2><h3 id="1、html的局限性"><a href="#1、html的局限性" class="headerlink" title="1、html的局限性"></a>1、html的局限性</h3><p>HTML只关注内容的语义</p><h3 id="2、CSS-网页美容师"><a href="#2、CSS-网页美容师" class="headerlink" title="2、CSS-网页美容师"></a>2、CSS-网页美容师</h3><p>CSS，aka层叠样式表（Cascading  Style Sheet），aka CSS样式表， aka 级联样式表<br>CSS也是一种标记语言<br>CSS最大价值：<br>&emsp;&emsp;由HTML专注去做结构呈现，样式交给CSS，即结构(HTML)与样式(CSS)相分离。</p><h2 id="二、CSS基础选择器"><a href="#二、CSS基础选择器" class="headerlink" title="二、CSS基础选择器"></a>二、CSS基础选择器</h2><p>基础选择器是由单个选择器组成的<br>基础选择器又包括:标签选择器、类选择器（含多类名选择器）、id 选择器和通配符选择器<br><img src="https://fastly.jsdelivr.net/gh/solenshelby/solenshelby.github.io@main//images/heima_css_note/css基础选择器.png?5x20" alt="css基础选择器.png"><br><strong>基础选择器总结:</strong><br><img src="https://fastly.jsdelivr.net/gh/solenshelby/solenshelby.github.io@main//images/heima_css_note/复合选择器总结.png?20x30" alt="CSS基础选择器总结.png"></p><h2 id="三、CSS字体属性（font）"><a href="#三、CSS字体属性（font）" class="headerlink" title="三、CSS字体属性（font）"></a>三、CSS字体属性（font）</h2><ol><li>字体种类（font-family)<br>各种字体之间必须使用英文状态下的逗号隔开。<br>一般情况下,如果有空格隔开的多个单词组成的字体,加引号。<br>尽量使用系统默认自带字体，保证在任何用户的浏览器中都能正确显示。<br>最常见的几个字体:body {font-family: ‘Microsoft YaHei’,tahoma,arial,’Hiragino Sans GB’; }。<br>对文本设定多个字体对不同的浏览器兼容性更好。  </li><li>字体大小（font-size）<br>可以给body标签指定整个页面文字的大小，同时标题标签比较特殊，需要特别指定大小。</li><li>字体粗细（font-weight)<br>可以通过这个标签让html中的加粗标签（h/strong）不加粗，或者让其他标签加粗<br>实际开发时，更习惯使用数字表示粗细。400（normal）正常，700（bold）加粗</li><li>字体样式（font-style)<br>平时很少给文字加斜体，反而要给html中的斜体标签（em/i）改为不倾斜字体。</li><li>字体复合属性（font：）<br> 字体属性可以把以上文字样式综合来写, 这样可以更节约代码:<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"><span class="attribute">font</span>: font-style font-weight font-size/line-height font_family;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>使用 font 复合属性时，必须按上面顺序书写，不能更换顺序，并且各个属性间以空格隔开<br>不需要设置的属性可以省略(取默认值)，但必须保留 font-size 和 font-family 属性，否则 font 属性将不起作用</li></ol><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/CSS%E5%AD%97%E4%BD%93%E5%B1%9E%E6%80%A7.png" alt="CSS字体属性.png"></p><h2 id="四、CSS文本属性（text）"><a href="#四、CSS文本属性（text）" class="headerlink" title="四、CSS文本属性（text）"></a>四、CSS文本属性（text）</h2><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/CSS%E6%96%87%E6%9C%AC%E5%B1%9E%E6%80%A7%E6%80%BB%E7%BB%93.png" alt="CSS文本属性总结.png"></p><h2 id="五、CSS的引入方式"><a href="#五、CSS的引入方式" class="headerlink" title="五、CSS的引入方式"></a>五、CSS的引入方式</h2><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/CSS%E5%BC%95%E5%85%A5%E6%96%B9%E5%BC%8F%E6%80%BB%E7%BB%93.png" alt="CSS引入方式总结.png"></p><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/CSS%E5%BC%95%E5%85%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F.png" alt="CSS引入的三种方式.png"></p><h2 id="六、Chrome调试工具"><a href="#六、Chrome调试工具" class="headerlink" title="六、Chrome调试工具"></a>六、Chrome调试工具</h2><p>Chrome 浏览器提供了一个非常好用的调试工具，可以用来调试我们的 HTML 结构和 CSS 样式。</p><h1 id="Section-2"><a href="#Section-2" class="headerlink" title="Section 2"></a>Section 2</h1><h2 id="一、Emmet语法"><a href="#一、Emmet语法" class="headerlink" title="一、Emmet语法"></a>一、Emmet语法</h2><p>Emmet语法的前身是Zen coding,使用缩写,来提高html/css的编写速度, Vscode内部已经集成该语法.</p><h3 id="1、快速生成HTML结构语法"><a href="#1、快速生成HTML结构语法" class="headerlink" title="1、快速生成HTML结构语法"></a>1、快速生成HTML结构语法</h3><ol><li>生成标签 直接输入标签名 按tab键即可 比如 div 然后tab 键， 就可以生成 <div></div></li><li>如果想要生成多个相同标签 加上 <em> 就可以了 比如 div</em>3 就可以快速生成3个div</li><li>如果有父子级关系的标签，可以用 &gt; 比如 ul &gt; li就可以了</li><li>如果有兄弟关系的标签，用 + 就可以了 比如 div+p</li><li>如果生成带有类名或者id名字的， 直接写 .demo 或者 #two tab 键就可以了</li><li>如果生成的div 类名是有顺序的， 可以用 自增符号 $</li><li>如果想要在生成的标签内部写内容可以用 { } 表示</li></ol><h3 id="2、快速生成CSS样式语法"><a href="#2、快速生成CSS样式语法" class="headerlink" title="2、快速生成CSS样式语法"></a>2、快速生成CSS样式语法</h3><ul><li>CSS 基本采取简写形式即可。</li></ul><h2 id="二、CSS复合选择器"><a href="#二、CSS复合选择器" class="headerlink" title="二、CSS复合选择器"></a>二、CSS复合选择器</h2><ul><li>CSS 中，可以根据选择器的类型把选择器分为基础选择器和复合选择器，复合选择器是建立在基础选择器之上，对基本选择器进行组合形成的。</li><li>复合选择器可以更准确、更高效的选择目标元素(标签)。</li><li>常用的复合选择器包括:后代选择器、子选择器、并集选择器、伪类选择器等等。</li></ul><h3 id="1-后代选择器（包含选择器）"><a href="#1-后代选择器（包含选择器）" class="headerlink" title="1.后代选择器（包含选择器）"></a>1.后代选择器（包含选择器）</h3><p>语法：元素1 元素2 { 样式声明 }</p><p>元素1 和 元素2 可以是任意基础选择器</p><p>最终选择的是元素2</p><h3 id="2-子选择器"><a href="#2-子选择器" class="headerlink" title="2.子选择器"></a>2.子选择器</h3><p>语法：元素1 &gt; 元素2 { 样式声明 }</p><p>最终选择的是元素2</p><h3 id="3-并集选择器"><a href="#3-并集选择器" class="headerlink" title="3.并集选择器"></a>3.并集选择器</h3><p>并集选择器可以选择多组标签, 同时为他们定义相同的样式。通常用于集体声明.</p><p>并集选择器是各选择器通过英文逗号(,)连接而成，任何形式选择器都可作为并集选择器的一部分。</p><p>语法：元素1 ，元素2 { 样式声明 }</p><p>语法规范：并集选择器适合竖着写，最后一个选择器不加逗号</p><h3 id="4-伪类选择器"><a href="#4-伪类选择器" class="headerlink" title="4.伪类选择器"></a>4.伪类选择器</h3><p>伪类选择器用于向选择器添加特殊的效果，比如给链接添加特殊效果，或选择第1个，第n个元素。</p><p>伪类选择器书写最大的特点是用冒号(:)表示，比如 :hover 、 :first-child</p><p>伪类选择器很多，比如有链接伪类、结构伪类等，所以这里先给大家讲解常用的链接伪类选择器。</p><ul><li><p>链接伪类选择器：</p><p>  a:link { }   链接默认样式</p><p>  a:visited { } 链接访问后样式</p><p>  a:hover { } 鼠标悬停在链接上面的样式</p><p>  a:active { } 鼠标点击但没收回的样式</p><p>  为了确保生效，请按照 LVHA 的循顺序声明 :link-:visited-:hover-:active。</p><p>  因为 a 链接在浏览器中具有默认样式，所以我们实际工作中都需要给链接单独指定样式。</p></li><li><p>:focus 伪类选择器</p><p>  :focus 伪类选择器用于选取获得焦点的表单元素。</p><p>  焦点就是光标，一般情况 <input> 类表单元素才能获取，因此这个选择器也主要针对于表单元素来说。</p><p>  input:focus { }</p></li></ul><h3 id="5-复合选择器总结："><a href="#5-复合选择器总结：" class="headerlink" title="5.复合选择器总结："></a>5.复合选择器总结：</h3><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/%E5%A4%8D%E5%90%88%E9%80%89%E6%8B%A9%E5%99%A8%E6%80%BB%E7%BB%93.png" alt="复合选择器总结.png"></p><h2 id="三、CSS的元素显示模式"><a href="#三、CSS的元素显示模式" class="headerlink" title="三、CSS的元素显示模式"></a>三、CSS的元素显示模式</h2><p>元素显示模式就是元素(标签)以什么方式进行显示，比如<div>自己占一行，比如一行可以放多个<span>。</p><p>HTML元素一般分为块元素和行内元素。</p><ol><li>块级元素<br>  常见的块元素有<h1>~<h6>、<p>、<div>、<ul>、<ol>、<li>等，其中 <div> 标签是最典型的块元素。<br>文字类的元素内不能使用块级元素，like <p>元素 <h1>～<h6>标题元素</li><li>行内元素<br>常见的行内元素有 <code>&lt;a&gt;、&lt;strong&gt;、&lt;b&gt;、&lt;em&gt;、&lt;i&gt;、&lt;del&gt;、&lt;s&gt;、&lt;ins&gt;、&lt;u&gt;、&lt;span&gt;</code>等，其中 <code>&lt;span&gt;</code> 标签是最典型的行内元素。有的地方也将行内元素称为内联元素。<br>特殊情况链接  里面可以放块级元素，但是给 <code>&lt;a&gt;</code> 转换一下块级模式最安全</li><li>行内快元素<br>在行内元素中有几个特殊的标签 —— <img />、<input />、<td>，它们同时具有块元素和行内元素的特点。 有些资料称它们为行内块元素。</li><li><p>元素显示模式总结：</p><p> <img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/%E5%85%83%E7%B4%A0%E6%98%BE%E7%A4%BA%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93.png" alt="元素显示模式总结.png"></p></li><li><p>元素显示模式转换<br>转换为块元素:display:block;<br>转换为行内元素:display:inline;<br>转换为行内块:display: inline-block;</p></li></ol><h2 id="四、CSS的背景"><a href="#四、CSS的背景" class="headerlink" title="四、CSS的背景"></a>四、CSS的背景</h2><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/CSS%E8%83%8C%E6%99%AF%E6%80%BB%E7%BB%93.png" alt="CSS背景总结.png"></p><p>这部分笔记需要补充</p><h2 id="五、CSS三大特性"><a href="#五、CSS三大特性" class="headerlink" title="五、CSS三大特性"></a>五、CSS三大特性</h2><h3 id="1、层叠性"><a href="#1、层叠性" class="headerlink" title="1、层叠性"></a>1、层叠性</h3><p>相同的选择器设置同样的样式，此时一个样式就会覆盖另一个冲突的样式，层叠性主要解决样式冲突性。</p><p>层叠性原则：</p><ul><li>样式冲突，遵循的原则是就近原则，哪个样式离结构近，就执行哪个样式</li><li>样式不冲突，不会层叠</li></ul><h3 id="2、继承性"><a href="#2、继承性" class="headerlink" title="2、继承性"></a>2、继承性</h3><p>CSS中的继承: 子标签会继承父标签的某些样式，如文本颜色和字号。简单的理解就是:子承父业。</p><ul><li><p>行高的继承性：</p><p>  font: 12px/1.5  Microsoft YaHei;</p><p>  行高可以跟单位也可以不跟单位，这个时候因该是font-size的1.5倍，这样的写法可以让里面的字元素根据自己的文字大小自动调整行高。</p></li></ul><h3 id="3、优先级"><a href="#3、优先级" class="headerlink" title="3、优先级"></a>3、优先级</h3><p>当同一个元素指定多个选择器，就会有优先级的产生。</p><ul><li>选择器相同，则执行层叠性</li><li>选择器不同，则根据选择器权重执行</li><li><p>选择器权重如下表示：</p><p>  <img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/%E9%80%89%E6%8B%A9%E5%99%A8%E6%9D%83%E9%87%8D%E5%A4%A7%E5%B0%8F%E8%A1%A8.png" alt="选择器权重大小表.png"></p></li><li><p>继承的权重是0，如果该元素没有直接被选中，不管父元素权重多高，子元素的到的权重都是0，以后看标签执行哪个样式，直接看这个标签有无选择出来。</p></li><li><p>当选择器为复合选择器时，这个时候会有权重叠加，需要计算权重。</p><p>  <img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-18_at_00.31.30.png" alt="Screen Shot 0004-05-18 at 00.31.30.png"></p></li></ul><h2 id="六、CSS盒子模型"><a href="#六、CSS盒子模型" class="headerlink" title="六、CSS盒子模型"></a>六、CSS盒子模型</h2><p>网页布局过程：</p><ul><li>先准备好相关的网页，网页元素基本都是盒子box。</li><li>利用CSS设置好盒子样式，然后摆放到相应位置。</li><li>往盒子里面装内容。</li></ul><p>网页布局的本质：利用CSS摆盒子。</p><p>盒子模型的组成：边框（border），外边距（margin），内边距（padding）内容（content）</p><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-18_at_21.41.40.png" alt="Screen Shot 0004-05-18 at 21.41.40.png"></p><h3 id="1、边框（border）"><a href="#1、边框（border）" class="headerlink" title="1、边框（border）"></a>1、边框（border）</h3><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-18_at_21.45.09.png" alt="Screen Shot 0004-05-18 at 21.45.09.png"></p><p>边框属性支持复写：</p><p>border: border-width border-style border-color</p><p>同时也支持设定盒子某一条边框的属性：</p><p>border-top：border-width border-style border-color</p><p>border- bottom：border-width border-style border-color</p><p>border-left：border-width border-style border-color</p><p>border-right：border-width border-style border-color</p><p>表格的细线边框： border-collapse属性控制浏览器绘制表格边框的方式，控制相邻单元格的边框。</p><p>语法：border-collapse: collapse;</p><ul><li>collapse meanings 合并</li><li>border-collpase: collpase;表示相邻边框合并在一起。</li></ul><p>边框会影响盒子的实际大小。</p><h3 id="2、内边框（padding）"><a href="#2、内边框（padding）" class="headerlink" title="2、内边框（padding）"></a>2、内边框（padding）</h3><p>padding属性设置内边框，控制边框与内容之间的距离。</p><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-18_at_22.30.17.png" alt="Screen Shot 0004-05-18 at 22.30.17.png"></p><p>padding 属性(简写属性)可以有一到四个值。</p><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-18_at_22.31.11.png" alt="Screen Shot 0004-05-18 at 22.31.11.png"></p><p>设定内边框padding值之后，内容和边框也有了距离，所以说padding撑大了盒子。</p><p>如果需要padding不影响盒子，需要不能给盒子设定width和height属性。</p><h3 id="3、外边距（margin）"><a href="#3、外边距（margin）" class="headerlink" title="3、外边距（margin）"></a>3、外边距（margin）</h3><p>外边距margin控制盒子与盒子之间的距离。</p><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-18_at_22.34.28.png" alt="Screen Shot 0004-05-18 at 22.34.28.png"></p><p>margin的简写方式和padding一致。</p><p>外边距margin的典型应用：</p><ul><li><p>外边距margin可以让盒子水平居中，但必须满足两个条件：</p><p>  盒子必须指定宽度</p><p>  盒子左右的外边距设定auto</p><p>  常见写法：.div { width: 100px; margin: 0 auto;}</p><p>  如果是行内元素或者是行内块元素水平对其，需要给其父元素添加text-align：center；</p></li></ul><p>外边距合并：</p><p>使用 margin 定义块元素的垂直外边距时，可能会出现外边距的合并。</p><ul><li><p>相邻块元素垂直外边距的合并</p><p>  此时两个盒子的边距是以设定最大外边距的盒子为准。解决这个问题的方式是只给一个盒子设定外边距就好了。</p></li><li><p>嵌套块元素垂直外边距的塌陷</p><p>  对于两个嵌套关系(父子关系)的块元素，父元素有上外边距同时子元素也有上外边距，此时父元素会塌陷较大的外边距值。</p><p>  解决方案：</p><p>  1.可以为父元素定义上边框。</p><p>  2.可以为父元素定义上内边距。</p><p>  3.可以为父元素添加 overflow:hidden。</p></li></ul><h3 id="4、清除内外边距"><a href="#4、清除内外边距" class="headerlink" title="4、清除内外边距"></a>4、清除内外边距</h3><p>网页元素很多都带有默认的内外边距，而且不同浏览器默认的也不一致。因此我们在布局前，首先要清除下网 页元素的内外边距。</p><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-18_at_23.46.24.png" alt="Screen Shot 0004-05-18 at 23.46.24.png"></p><h3 id="5、清除无需列表中的li前面的小圆点"><a href="#5、清除无需列表中的li前面的小圆点" class="headerlink" title="5、清除无需列表中的li前面的小圆点"></a>5、清除无需列表中的li前面的小圆点</h3><p>list-style: none;</p><h2 id="七、圆角边框"><a href="#七、圆角边框" class="headerlink" title="七、圆角边框"></a>七、圆角边框</h2><p>border-radius 属性用于设置元素的外边框圆角。radius（半径）</p><p>语法：border-radius：length；</p><ul><li>参数值可以为数值或百分比的形式</li><li>如果是正方形，想要设置为一个圆，把数值修改为高度或者宽度的一半即可，或者直接写为 50%</li><li>该属性是一个简写属性，可以跟四个值，分别代表左上角、右上角、右下角、左下角</li><li>分开写:border-top-left-radius、border-top-right-radius、border-bottom-right-radius 和<br>border-bottom-left-radius</li><li>border-radius: 10px 10px 10px 10px ;  border-radius: 10px 10px ;这样写是两个对角的圆角半径值。</li></ul><h2 id="八、盒子阴影（box-shadow）"><a href="#八、盒子阴影（box-shadow）" class="headerlink" title="八、盒子阴影（box-shadow）"></a>八、盒子阴影（box-shadow）</h2><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-20_at_04.27.59.png" alt="Screen Shot 0004-05-20 at 04.27.59.png"></p><h2 id="九、文字阴影（text-shadow）"><a href="#九、文字阴影（text-shadow）" class="headerlink" title="九、文字阴影（text-shadow）"></a>九、文字阴影（text-shadow）</h2><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-20_at_04.28.46.png" alt="Screen Shot 0004-05-20 at 04.28.46.png"></p><hr><h1 id="CSS第三天"><a href="#CSS第三天" class="headerlink" title="CSS第三天"></a>CSS第三天</h1><h2 id="一、CSS浮动"><a href="#一、CSS浮动" class="headerlink" title="一、CSS浮动"></a>一、CSS浮动</h2><p>传统网页布局三种方式：普通流（标准流）、浮动、定位</p><h3 id="1、普通流（标准流）：标签按照规定好的默认方式排列"><a href="#1、普通流（标准流）：标签按照规定好的默认方式排列" class="headerlink" title="1、普通流（标准流）：标签按照规定好的默认方式排列"></a>1、普通流（标准流）：标签按照规定好的默认方式排列</h3><ul><li>标准流的局限性：<ol><li>块级元素转为行内块元素并且一行显示时，之前会有大的空白缝隙，很难控制。</li></ol></li></ul><h3 id="2、网页布局第一准则"><a href="#2、网页布局第一准则" class="headerlink" title="2、网页布局第一准则:"></a>2、网页布局第一准则:</h3><p>多个块级元素纵向排列找标准流，多个块级元素横向排列找浮动。</p><h3 id="3、网页布局第二准侧"><a href="#3、网页布局第二准侧" class="headerlink" title="3、网页布局第二准侧"></a>3、网页布局第二准侧</h3><p>先设置盒子的大小, 之后设置盒子的位置</p><h3 id="4、浮动："><a href="#4、浮动：" class="headerlink" title="4、浮动："></a>4、浮动：</h3><ul><li>为什么使用浮动：<ol><li>很多布局效果，标准流无法完成，此时可以利用浮动，从而改变元素标签的默认排列方式。</li><li>浮动最典型的运用：让多个块级元素一行内排列显示。</li></ol></li><li><p>什么是浮动：</p><ol><li>float 属性用于创建浮动框，将其移动到一边，直到左边缘或右边缘触及包含块或另一个浮动框的边缘。</li><li><p>语法：选择器 { float: 属性值; }  </p><p> 属性值：none，默认，元素不浮动；left，元素向左浮动；right，元素向右浮动</p></li></ol></li><li><p><strong>浮动特性</strong></p><ol><li>浮动元素会脱离标准流(脱标)，浮动的盒子不再保留原先的位置，原先的位置会被标准流的盒子占据。</li><li>如果多个盒子都设置了浮动，则它们会按照属性值一行内显示并且顶端对齐排列。<ul><li>浮动的元素是不会有缝隙，如果父级宽度装不下这些浮动的盒子， 多出的盒子会另起一行对齐。</li></ul></li><li>浮动元素会具有行内块元素特性。</li></ol></li><li><p>浮动元素经常和标准流父级搭配使用</p><p>  为了约束浮动元素位置, 我们网页布局一般采取的策略是：先用标准流的父元素排列上下位置,之后内部子元素采取浮动排列左右位置. 符合网页布局第一准则。</p></li></ul><h2 id="二、常见网页布局"><a href="#二、常见网页布局" class="headerlink" title="二、常见网页布局"></a>二、常见网页布局</h2><ol><li><p>浮动布局注意点</p><ul><li><p>浮动和标准流的父盒子搭配。</p><p>  先用标准流的父元素排列上下位置, 之后内部子元素采取浮动排列左右位置</p></li><li><p>一个元素浮动了，理论上其余的兄弟元素也要浮动。</p><p>  一个盒子里面有多个子盒子，如果其中一个盒子浮动了，那么其他兄弟也应该浮动，以防止引起问题。</p><p>  浮动的盒子只会影响浮动盒子后面的标准流,不会影响前面的标准流.</p></li></ul></li></ol><h3 id="三、清除浮动："><a href="#三、清除浮动：" class="headerlink" title="三、清除浮动："></a>三、清除浮动：</h3><ol><li><p>为什么要清楚浮动：</p><p> 父级盒子很多情况下，不方便给高度，但是子盒子浮动又不占有位置，最后父级盒子高度为 0 时，就会影响下面的标准流盒子。</p><p> 由于浮动元素不再占用原文档流的位置，所以它会对后面的元素排版产生影响</p></li><li><p>清除浮动本质：</p><ul><li>清除浮动的本质是清除浮动元素造成的影响</li><li>如果父盒子本身有高度，则不需要清除浮动</li><li>清除浮动后，父级就会根据浮动的子盒子自动检测高度。父级有了高度，就不会影响下面的标准流了</li></ul></li><li>清除浮动<ul><li>语法：选择器{clear:属性值;}</li><li>属性值：left，不允许左侧有浮动元素；right，不允许右侧有浮动元素；both，同时清除左右两侧浮动的影响。</li><li>清除浮动的策略是: 闭合浮动。实际工作中，几乎用clear：both；</li></ul></li><li><p>清除浮动方法：</p><ul><li><p>额外标签法也称为隔墙法，是 W3C 推荐的做法。</p><p>  浮动元素末尾添加一个空的标签（块级标签）。例如 <div style=”clear:both”></div></p></li><li><p>父级添加 overflow：</p><p>  父级添加 overflow 属性，将其属性值设置为 hidden、 auto 或 scroll 。</p><p>  优点:代码简洁<br>  缺点:无法显示溢出的部分</p></li><li><p>:after 伪元素法</p><p>  :after 方式是额外标签法的升级版。也是给父元素添加</p>  <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123; </span><br><span class="line"><span class="attribute">content</span>: <span class="string">&quot;&quot;</span>; </span><br><span class="line"><span class="attribute">display</span>: block; </span><br><span class="line"><span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">clear</span>: both; </span><br><span class="line"><span class="attribute">visibility</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span> &#123; </span><br><span class="line"><span class="comment">/* IE6、7 专有 */</span></span><br><span class="line">*zoom: <span class="number">1</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>  优点:没有增加标签，结构更简单</p><p>  缺点:照顾低版本浏览器</p></li><li><p>双伪元素清除浮动</p><p>  也是给父元素添加。</p>  <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:before</span>,<span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123; </span><br><span class="line"><span class="attribute">content</span>:<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="attribute">display</span>:table;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line"><span class="attribute">clear</span>:both;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span> &#123;</span><br><span class="line">   *zoom:<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  优点:代码更简洁</p><p>  缺点:照顾低版本浏览器</p></li></ul></li></ol><h3 id="四、CSS属性书写顺序"><a href="#四、CSS属性书写顺序" class="headerlink" title="四、CSS属性书写顺序"></a>四、CSS属性书写顺序</h3><ol><li>布局定位属性:display / position / float / clear / visibility / overflow(建议 display 第一个写，毕竟关系到模式)</li><li>自身属性:width / height / margin / padding / border / background</li><li>文本属性:color / font / text-decoration / text-align / vertical-align / white- space / break-word</li><li>其他属性(CSS3):content / cursor / border-radius / box-shadow / text-shadow / background:linear-gradient …</li></ol><h3 id="五、通常的网页布局流程："><a href="#五、通常的网页布局流程：" class="headerlink" title="五、通常的网页布局流程："></a>五、通常的网页布局流程：</h3><ol><li>必须确定页面的版心(可视区)，我们测量可得知。</li><li>分析页面中的行模块，以及每个行模块中的列模块。其实页面布局，就是一行行罗列而成的。</li><li>制作 HTML 结构。我们还是遵循，先有结构，后有样式的原则。结构永远最重要。</li><li>开始运用盒子模型的原理，通过 DIV+CSS 布局来控制网页的各个模块。</li></ol><hr><h1 id="第六天"><a href="#第六天" class="headerlink" title="第六天"></a>第六天</h1><h2 id="一、定位（position）"><a href="#一、定位（position）" class="headerlink" title="一、定位（position）"></a>一、定位（position）</h2><h3 id="（一）、为什么需要定位？"><a href="#（一）、为什么需要定位？" class="headerlink" title="（一）、为什么需要定位？"></a>（一）、为什么需要定位？</h3><ul><li>浮动可以让多个块级盒子一行没有缝隙排列显示， 经常用于横向排列盒子。</li><li>定位则是可以让盒子自由的在某个盒子内移动位置或者固定屏幕中某个位置，并且可以压住其他盒子。</li></ul><h3 id="（二）、定位组成"><a href="#（二）、定位组成" class="headerlink" title="（二）、定位组成"></a>（二）、定位组成</h3><p>定位  = 定位模式 + 边偏移</p><p>定位模式用于指定一个元素在文档中的定位方式。边偏移则决定了该元素的最终位置。</p><h3 id="1、定位模式"><a href="#1、定位模式" class="headerlink" title="1、定位模式"></a>1、定位模式</h3><p>定位模式决定元素的定位方式 ，它通过 CSS 的 position 属性来设置，其值可以分为四个：</p><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-28_at_01.46.18.png" alt="Screen Shot 0004-05-28 at 01.46.18.png"></p><h3 id="2、边偏移"><a href="#2、边偏移" class="headerlink" title="2、边偏移"></a>2、边偏移</h3><p>边偏移就是定位的盒子移动到最终位置。有 top、bottom、left 和 right 4 个属性。</p><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-28_at_01.48.10.png" alt="Screen Shot 0004-05-28 at 01.48.10.png"></p><h3 id="（三）、静态定位（static）"><a href="#（三）、静态定位（static）" class="headerlink" title="（三）、静态定位（static）"></a>（三）、静态定位（static）</h3><p>静态定位是元素的默认定位方式，无定位的意思，按照标准流摆放位置。</p><h3 id="（四）、相对定位（relative）"><a href="#（四）、相对定位（relative）" class="headerlink" title="（四）、相对定位（relative）"></a>（四）、相对定位（relative）</h3><p>相对定位是元素在移动位置的时候，是相对于它原来的位置来说。</p><p><strong>特点：</strong></p><ul><li>移动位置的时候参照点是自己原来的位置。</li><li>原来在标准流的位置继续占有，后面的盒子仍然以标准流的方式对待它。（没有脱标）</li></ul><h3 id="（五）、绝对定位（absolute）"><a href="#（五）、绝对定位（absolute）" class="headerlink" title="（五）、绝对定位（absolute）"></a>（五）、绝对定位（absolute）</h3><p>绝对定位是元素在移动位置的时候，是相对于它祖先元素来说的。</p><p><strong>特点：</strong></p><ul><li>如果没有祖先元素或者祖先元素没有定位，则以浏览器为准定位(Document 文档)。</li><li>如果祖先元素有定位(相对、绝对、固定定位)，则以最近一级的有定位祖先元素为参考点移动位置。</li><li>绝对定位不再占有原先的位置，会脱离原来的位置。(脱标）</li></ul><h3 id="（六）、子绝父相"><a href="#（六）、子绝父相" class="headerlink" title="（六）、子绝父相"></a>（六）、子绝父相</h3><p>因为父级需要占有位置，因此是相对定位， 子盒子不需要占有位置，则是绝对定位。</p><p>but，子绝父相不是永远不变的，如果父元素不需要占有位置，子绝父绝也会遇到。</p><h3 id="（七）、固定定位（fixed）"><a href="#（七）、固定定位（fixed）" class="headerlink" title="（七）、固定定位（fixed）"></a>（七）、固定定位（fixed）</h3><p>固定定位是元素固定于浏览器可视区的位置。主要使用场景: 可以在浏览器页面滚动时元素的位置不会改变。</p><p><strong>特点：</strong></p><ul><li>以浏览器的可视窗口为参照点移动元素。</li><li>跟父元素没有任何关系，不随滚动条滚动。</li><li>固定定位不在占有原先的位置（脱标）。</li></ul><h3 id="（八）、粘粘定位（sticky）"><a href="#（八）、粘粘定位（sticky）" class="headerlink" title="（八）、粘粘定位（sticky）"></a>（八）、粘粘定位（sticky）</h3><p>粘性定位可以被认为是相对定位和固定定位的混合。 Sticky 粘性的</p><p><strong>特点：</strong></p><ul><li>以浏览器的可视窗口为参照点移动元素(固定定位特点)</li><li>粘性定位占有原先的位置(相对定位特点)</li><li>必须添加 top 、left、right、bottom 其中一个才有效。</li></ul><h3 id="（九）、定位总结"><a href="#（九）、定位总结" class="headerlink" title="（九）、定位总结"></a>（九）、定位总结</h3><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-28_at_02.04.06.png" alt="Screen Shot 0004-05-28 at 02.04.06.png"></p><h3 id="（十）、定位叠放次序-z-index"><a href="#（十）、定位叠放次序-z-index" class="headerlink" title="（十）、定位叠放次序 z-index"></a>（十）、定位叠放次序 z-index</h3><p>在使用定位布局时，可能会出现盒子重叠的情况。此时，可以使用 z-index 来控制盒子的前后次序 (z轴)</p><p>选择器 { z-index: 1;}</p><p><strong>特点：</strong></p><ul><li>数值可以是正整数、负整数或 0, 默认是 auto，数值越大，盒子越靠上</li><li>如果属性值相同，则按照书写顺序，后来居上</li><li>数字后面不能加单位</li><li>只有定位的盒子才有 z-index 属性</li></ul><h3 id="（十一）、定位拓展"><a href="#（十一）、定位拓展" class="headerlink" title="（十一）、定位拓展"></a>（十一）、定位拓展</h3><ul><li><p>如何让定位的盒子水平居中和垂直居中</p><p>  多使用，自然熟。</p></li><li><p>行内元素添加绝对或者固定定位，可以直接设置高度和宽度。</p></li><li>块级元素添加绝对或者固定定位，如果不给宽度或者高度，默认大小是内容的大小。</li><li>浮动元素、绝对定位(固定定位)元素的都不会触发外边距合并的问题。</li><li><p><strong>绝对定位(固定定位)会完全压住盒子：</strong></p><ol><li><p>浮动元素不同，只会压住它下面标准流的盒子，但是不会压住下面标准流盒子里面的文字(图片)</p><p> 浮动之所以不会压住文字，因为浮动产生的目的最初是为了做文字环绕效果的。 文字会围绕浮动元素。</p></li><li><p>绝对定位(固定定位) 会压住下面标准流所有的内容。</p></li></ol></li></ul><h2 id="二、网页布局总结"><a href="#二、网页布局总结" class="headerlink" title="二、网页布局总结"></a>二、网页布局总结</h2><ol><li><p>标准流：</p><p>可以让盒子上下排列或者左右排列，垂直的块级盒子显示就用标准流布局。</p></li><li><p>浮动：</p><p> 可以让多个块级元素一行显示或者左右对齐盒子，多个块级盒子水平显示就用浮动布局。</p></li><li><p>定位：</p><p> 定位最大的特点是有层叠的概念，就是可以让多个盒子前后叠压来显示。如果元素自由在某个盒子内移动就用定位布局。</p></li></ol><h2 id="三、元素的显示和隐藏（display、visibility、overflow）"><a href="#三、元素的显示和隐藏（display、visibility、overflow）" class="headerlink" title="三、元素的显示和隐藏（display、visibility、overflow）"></a>三、元素的显示和隐藏（display、visibility、overflow）</h2><h3 id="（一）display（展示）"><a href="#（一）display（展示）" class="headerlink" title="（一）display（展示）"></a>（一）display（展示）</h3><p>display 属性用于设置一个元素应如何显示。本质：让一个元素在页面中隐藏或者显示出来。</p><ul><li>display: none；隐藏对象</li><li>display: block ;  除了转换为块级元素之外，同时还有显示元素的意思</li><li><strong>display 隐藏元素后，不再占有原来的位置。</strong></li></ul><h3 id="（二）visibility（可见性）"><a href="#（二）visibility（可见性）" class="headerlink" title="（二）visibility（可见性）"></a>（二）visibility（可见性）</h3><p>visibility 属性用于指定一个元素应可见还是隐藏。</p><ul><li>visibility:visible ; 元素可视</li><li>visibility:hidden; 元素隐藏</li><li>visibility 隐藏元素后，继续占有原来的位置。</li><li>应用举例：类似网站广告，当我们点击关闭就不见了，但是我们重新刷新页面，会重新出现！</li></ul><h3 id="（三）overflow（溢出）"><a href="#（三）overflow（溢出）" class="headerlink" title="（三）overflow（溢出）"></a>（三）overflow（溢出）</h3><p>overflow 属性指定了如果内容溢出一个元素的框(超过其指定高度及宽度) 时，会发生什么。</p><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-28_at_02.56.33.png" alt="Screen Shot 0004-05-28 at 02.56.33.png"></p><p>如果有定位的盒子， 请慎用overflow:hidden 因为它会隐藏多余的部分。</p><hr><h1 id="第七天"><a href="#第七天" class="headerlink" title="第七天"></a>第七天</h1><h2 id="一、精灵图"><a href="#一、精灵图" class="headerlink" title="一、精灵图"></a>一、精灵图</h2><h3 id="（一）为什么需要精灵图（sprites）"><a href="#（一）为什么需要精灵图（sprites）" class="headerlink" title="（一）为什么需要精灵图（sprites）"></a>（一）为什么需要精灵图（sprites）</h3><p>网页中会应用很小的背景图片作为修饰，当网页中的图像过多时，服务器就会频繁的接收和请求图片，造成服务器压力过大，降低网页加载速度。</p><h3 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h3><p>将网页中的一些小背景图片整合到一张大图中，这样服务器只需要一次请求就可以了。</p><h3 id="（二）使用精灵图"><a href="#（二）使用精灵图" class="headerlink" title="（二）使用精灵图"></a>（二）使用精灵图</h3><ol><li>精灵技术主要针对于背景图片使用。就是把多个小背景图片整合到一张大图片中。</li><li>这个大图片也称为 sprites 精灵图 或者 雪碧图。</li><li>移动背景图片位置， 此时可以使用 background-position 。</li><li>移动的距离就是这个目标图片的 x 和 y 坐标。注意网页中的坐标有所不同。</li><li>因为一般情况下都是往上往左移动，所以数值是负值。</li><li>使用精灵图的时候需要精确测量，每个小背景图片的大小和位置。（尝试使用FireWorks）</li></ol><h2 id="二、字体图标（iconfont）"><a href="#二、字体图标（iconfont）" class="headerlink" title="二、字体图标（iconfont）"></a>二、字体图标（iconfont）</h2><h3 id="（一）使用场景：用于显示网页中通用、常用的一些小图标。"><a href="#（一）使用场景：用于显示网页中通用、常用的一些小图标。" class="headerlink" title="（一）使用场景：用于显示网页中通用、常用的一些小图标。"></a>（一）使用场景：用于显示网页中通用、常用的一些小图标。</h3><h3 id="（二）为什么不使用精灵图代替小图标："><a href="#（二）为什么不使用精灵图代替小图标：" class="headerlink" title="（二）为什么不使用精灵图代替小图标："></a>（二）为什么不使用精灵图代替小图标：</h3><ol><li>图片文件还是比较大的。</li><li>图片本身放大和缩小会失真。</li><li>一旦图片制作完毕想要更换非常复杂。</li><li>字体图标为前端工程师提供一种方便高效的图标使用方式，展示的是图标，本质上属于字体。</li></ol><h3 id="（三）字体图标的优点"><a href="#（三）字体图标的优点" class="headerlink" title="（三）字体图标的优点"></a>（三）字体图标的优点</h3><ul><li>轻量型：一个图标字体要比一系列的图像要小。一旦字体加载了，图标就会马上渲染出来，减少了服务器请求。</li><li>本质其实是文字，可以很随意的改变颜色、产生阴影、透明效果、旋转等。</li><li>几乎支持所有的浏览器，请放心使用。</li><li><p>字体图标不能代替精灵图使用，只是对工作中图标部分技术的提升和优化。</p><h3 id="精灵图和字体图标使用原则："><a href="#精灵图和字体图标使用原则：" class="headerlink" title="精灵图和字体图标使用原则："></a>精灵图和字体图标使用原则：</h3><ol><li>如果遇到一些结构和样式比较简单的小图标，就用字体图标。</li><li>如果遇到一些结构和样式复杂一点的小图片，就用精灵图。</li></ol></li></ul><h3 id="（四）字体图标的使用"><a href="#（四）字体图标的使用" class="headerlink" title="（四）字体图标的使用"></a>（四）字体图标的使用</h3><ol><li>字体图标的下载：推荐网站：<a href="https://icomoon.io/">**iconmoon字库</a> 、 <a href="http://www.iconfont.cn/">阿里iconfont字库</a>。**</li><li>字体图标的引入 (引入到我们html页面中)<ul><li>下载的字体压缩包中的font文件放到项目根文件中</li><li>CSS样式中进行全局字体声明。声明代码在压缩文件的 style.css 文件中。</li><li>在demo.html文件中选择要使用的图标，粘贴复制到要插入的html盒子中。</li><li>给要使用该图标的盒子进行font-family说明。</li></ul></li><li><p>字体图标的追加 (以后添加新的小图标)</p><p> 把压缩包里面的 selection.json 从新上传，然后选中自己想要新的图标，从新下载压缩包，并替换原来的文件即可。</p></li></ol><h2 id="三、CSS三角形"><a href="#三、CSS三角形" class="headerlink" title="三、CSS三角形"></a>三、CSS三角形</h2><h3 id="原理：-1"><a href="#原理：-1" class="headerlink" title="原理："></a>原理：</h3><p>使用一个高宽为0px的盒子，赋予其边框相应的宽度，其中三个边框透明，剩下一个边框就会是想要的三角形。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">*下面两行照顾低版本浏览器兼容性*</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">50px</span> solid transparent; </span><br><span class="line"><span class="attribute">border-left-color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CSS三角强化："><a href="#CSS三角强化：" class="headerlink" title="CSS三角强化："></a>CSS三角强化：</h3><p>上面的三角是一个两个锐角为45°等腰直角三角形，但是想要下面的效果就需要更复杂的调整。</p><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-29_at_05.14.44.png" alt="Screen Shot 0004-05-29 at 05.14.44.png"></p><p><strong>原理：</strong></p><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-29_at_05.15.15.png" alt="Screen Shot 0004-05-29 at 05.15.15.png"></p><p>效果代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">border-color</span>: transparent red transparent transparent; <span class="attribute">border-style</span>: solid;</span><br><span class="line"><span class="attribute">border-width</span>: <span class="number">22px</span> <span class="number">8px</span> <span class="number">0</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h2 id="四、CSS用户界面样式"><a href="#四、CSS用户界面样式" class="headerlink" title="四、CSS用户界面样式"></a>四、CSS用户界面样式</h2><h3 id="（一）鼠标样式（cursor）"><a href="#（一）鼠标样式（cursor）" class="headerlink" title="（一）鼠标样式（cursor）"></a>（一）鼠标样式（cursor）</h3><p>设置或检索在对象上移动的鼠标指针采用何种系统预定义的光标形状。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">li</span> &#123;<span class="attribute">cursor</span>: pointer; &#125;</span><br></pre></td></tr></table></figure><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-29_at_07.04.55.png" alt="Screen Shot 0004-05-29 at 07.04.55.png"></p><h3 id="（二）轮廓线-（outline）"><a href="#（二）轮廓线-（outline）" class="headerlink" title="（二）轮廓线 （outline）"></a>（二）轮廓线 （outline）</h3><p>给表单添加 outline: 0; 或者 outline: none; 样式之后，就可以去掉默认的蓝色边框。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span> &#123; <span class="attribute">outline</span>: none;&#125;</span><br></pre></td></tr></table></figure><h3 id="（三）防止拖拽文本域（resize）"><a href="#（三）防止拖拽文本域（resize）" class="headerlink" title="（三）防止拖拽文本域（resize）"></a>（三）防止拖拽文本域（resize）</h3><p>实际开发中，文本域右下角是不可以拖拽的。</p><p>文本域尽量写在一行上面，防止里面的空格占据输入框位置。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">textarea</span>&#123; <span class="attribute">resize</span>: none;&#125;</span><br></pre></td></tr></table></figure><h2 id="五、vertical-align属性应用"><a href="#五、vertical-align属性应用" class="headerlink" title="五、vertical-align属性应用"></a>五、vertical-align属性应用</h2><h3 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景:"></a>使用场景:</h3><p>经常用于设置图片或者表单(行内块元素)和文字垂直对齐。</p><h3 id="官方解释："><a href="#官方解释：" class="headerlink" title="官方解释："></a>官方解释：</h3><p>用于设置一个元素的垂直对齐方式，但是它只针对于行内元素或者行内块元素有效。</p><h3 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vetical-align :baseline | top | middle | bottom</span><br></pre></td></tr></table></figure><h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-29_at_07.23.36.png" alt="Screen Shot 0004-05-29 at 07.23.36.png"></p><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-29_at_07.24.17.png" alt="Screen Shot 0004-05-29 at 07.24.17.png"></p><h3 id="应用："><a href="#应用：" class="headerlink" title="应用："></a>应用：</h3><ol><li>图片、表单和文字对齐<ul><li>图片、表单都属于行内块元素，默认的 vertical-align 是基线对齐。</li><li>此时可以给图片、表单这些行内块元素的 vertical-align 属性设置为 middle 就可以让文字和图片垂直 居中对齐了。</li></ul></li><li><p>解决图片底部默认空白缝隙问题</p><ul><li>图片底侧会有一个空白缝隙，原因是行内块元素会和文字的基线对齐。</li><li><p>解决方法：</p><p>  给图片添加 vertical-align:middle | top| bottom 等。 (提倡使用的)</p><p>  把图片转换为块级元素 display: block （不推荐使用，因为会影响图片的使用）</p></li></ul></li></ol><h2 id="六、溢出的文字省略号（ellipsis）显示"><a href="#六、溢出的文字省略号（ellipsis）显示" class="headerlink" title="六、溢出的文字省略号（ellipsis）显示"></a>六、溢出的文字省略号（ellipsis）显示</h2><h3 id="（一）单行文本溢出显示省略号"><a href="#（一）单行文本溢出显示省略号" class="headerlink" title="（一）单行文本溢出显示省略号"></a>（一）单行文本溢出显示省略号</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*1. 先强制一行内显示文本*/</span></span><br><span class="line"><span class="attribute">white-space</span>: nowrap; ( 默认 <span class="attribute">normal</span> 自动换行)</span><br><span class="line"><span class="comment">/*2. 超出的部分隐藏*/</span> </span><br><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line"><span class="comment">/*3. 文字用省略号替代超出的部分*/</span> </span><br><span class="line"><span class="attribute">text-overflow</span>: ellipsis;</span><br></pre></td></tr></table></figure><h3 id="（二）多行文本溢出显示省略号"><a href="#（二）多行文本溢出显示省略号" class="headerlink" title="（二）多行文本溢出显示省略号"></a>（二）多行文本溢出显示省略号</h3><p>多行文本溢出显示省略号，有较大兼容性问题， 适合于webKit浏览器或移动端(移动端大部分是webkit内核)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line"><span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line"><span class="comment">/* 弹性伸缩盒子模型显示 */</span></span><br><span class="line"><span class="attribute">display</span>: -webkit-box;</span><br><span class="line"><span class="comment">/* 限制在一个块元素显示的文本的行数 */</span> </span><br><span class="line">-webkit-line-clamp: <span class="number">2</span>;</span><br><span class="line"><span class="comment">/* 设置或检索伸缩盒对象的子元素的排列方式 */</span> </span><br><span class="line">-webkit-box-orient: vertical;</span><br></pre></td></tr></table></figure><h2 id="七、常见布局技巧"><a href="#七、常见布局技巧" class="headerlink" title="七、常见布局技巧"></a>七、常见布局技巧</h2><h3 id="（一）margin负值运用"><a href="#（一）margin负值运用" class="headerlink" title="（一）margin负值运用"></a>（一）margin负值运用</h3><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-29_at_08.08.15.png" alt="Screen Shot 0004-05-29 at 08.08.15.png"></p><p>1.让每个盒子margin 往左侧移动 -1px 正好压住相邻盒子边框 </p><p>2.鼠标经过某个盒子的时候，提高当前盒子的层级即可(如果没有有定位，则加相对定位(保留位置)，如果有定位，则加z-index)</p><h3 id="（二）文字围绕浮动元素"><a href="#（二）文字围绕浮动元素" class="headerlink" title="（二）文字围绕浮动元素"></a>（二）文字围绕浮动元素</h3><p>巧妙利用浮动元素不会压住文字的特性</p><h3 id="（三）行内块巧妙运用"><a href="#（三）行内块巧妙运用" class="headerlink" title="（三）行内块巧妙运用"></a>（三）行内块巧妙运用</h3><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-29_at_08.07.33.png" alt="Screen Shot 0004-05-29 at 08.07.33.png"></p><p>1、将链接盒子转换为行内块， 之后给父级指定 text-align:center;</p><p>2、利用行内块元素中间有缝隙，并且给父级添加 text-align:center; 行内块元素会水平会居中</p><h3 id="（四）CSS三角强化"><a href="#（四）CSS三角强化" class="headerlink" title="（四）CSS三角强化"></a>（四）CSS三角强化</h3><h2 id="八、CSS初始化"><a href="#八、CSS初始化" class="headerlink" title="八、CSS初始化"></a>八、CSS初始化</h2><h3 id="WHY？"><a href="#WHY？" class="headerlink" title="WHY？"></a>WHY？</h3><p>不同浏览器对有些标签的默认值是不同的，为了消除不同浏览器对HTML文本呈现的差异，照顾浏览器的兼容，我们需要对CSS 初始化。</p><p>这里可以参考别的网站的CSS代码</p><h3 id="Unicode编码字体"><a href="#Unicode编码字体" class="headerlink" title="Unicode编码字体:"></a>Unicode编码字体:</h3><p>把中文字体的名称用相应的Unicode编码来代替，这样就可以有效的避免浏览器解释CSS代码时候出现乱码的问题。</p><h3 id="eg："><a href="#eg：" class="headerlink" title="eg："></a>eg：</h3><p>黑体 \9ED1\4F53<br>宋体 \5B8B\4F53<br>微软雅黑 \5FAE\8F6F\96C5\9ED1</p><hr><h1 id="第八天-HTML5和CSS3的提高"><a href="#第八天-HTML5和CSS3的提高" class="headerlink" title="第八天 HTML5和CSS3的提高"></a>第八天 HTML5和CSS3的提高</h1><h2 id="一、HTML5的新特性"><a href="#一、HTML5的新特性" class="headerlink" title="一、HTML5的新特性"></a>一、HTML5的新特性</h2><p>HTML5 的新增特性主要是针对于以前的不足，增加了一些新的标签、新的表单和新的表单属性等。</p><p>新特性都有兼容性问题，基本是 IE9+ 以上版本的浏览器才支持，如果不考虑兼容问题，可以大量使用这些新特性。</p><h3 id="（一）HTML5新增的语义化标签"><a href="#（一）HTML5新增的语义化标签" class="headerlink" title="（一）HTML5新增的语义化标签"></a>（一）HTML5新增的语义化标签</h3><p><header>：头部标签</p><p><nav>：导航标签</p><p><article>：内容标签</p><p><section>：定义文档某个区域</p><p><aside>：侧边栏标签</p><p><footer>：尾部标签</p><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-30_at_20.23.56.png" alt="Screen Shot 0004-05-30 at 20.23.56.png"></p><h3 id="Notice："><a href="#Notice：" class="headerlink" title="Notice："></a>Notice：</h3><ul><li>这种语义化标准主要针对搜索引擎</li><li>这些标签在页面中可以多次使用</li><li>在IE9中需要将这些标签转化为block</li></ul><h3 id="（二）HTML5新增的多媒体标签"><a href="#（二）HTML5新增的多媒体标签" class="headerlink" title="（二）HTML5新增的多媒体标签"></a>（二）HTML5新增的多媒体标签</h3><h3 id="1、视频标签"><a href="#1、视频标签" class="headerlink" title="1、视频标签"></a>1、<video>视频标签</h3><p>常见属性：</p><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-31_at_04.48.42.png" alt="Screen Shot 0004-05-31 at 04.48.42.png"></p><p>主流浏览器支持的<video>标签格式，一般情况尽量使用MP4格式</p><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-31_at_04.55.27.png" alt="Screen Shot 0004-05-31 at 04.55.27.png"></p><p><strong>如果针对低版本浏览器可以使用下面的写法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">video</span> controls=&quot;controls&quot; <span class="attribute">width</span>=&quot;<span class="number">300px</span>&quot;&gt;</span><br><span class="line">&lt;source <span class="attribute">src</span>=&quot;movie<span class="selector-class">.ogg</span>&quot; type=&quot;<span class="selector-tag">video</span>/ogg&quot;&gt;</span><br><span class="line">&lt;source <span class="attribute">src</span>=&quot;movie<span class="selector-class">.mp4</span>&quot; type=&quot;<span class="selector-tag">video</span>/mp4&quot;&gt;</span><br><span class="line">&lt;/<span class="selector-tag">video</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="2、音频标签"><a href="#2、音频标签" class="headerlink" title="2、音频标签"></a>2、<audio>音频标签</h3><p>常见属性：</p><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-31_at_05.04.26.png" alt="Screen Shot 0004-05-31 at 05.04.26.png"></p><h3 id="3、html5-音频和视频标签总结"><a href="#3、html5-音频和视频标签总结" class="headerlink" title="3、html5 音频和视频标签总结"></a>3、html5 音频和视频标签总结</h3><ul><li>音频标签和视频标签使用方式基本一致</li><li>浏览器支持情况不同</li><li>谷歌浏览器把音频和视频自动播放禁止了，<video>可以增加autoplay属性后在设定muted属性就可以自动播放；<audio>不可以了。</li><li><video>标签经常设置自动播放，不使用 controls 控件，循环和设置大小属性。</li></ul><h2 id="（三）新增表单input类型"><a href="#（三）新增表单input类型" class="headerlink" title="（三）新增表单input类型"></a>（三）新增表单input类型</h2><h3 id="1、新增表单input类型："><a href="#1、新增表单input类型：" class="headerlink" title="1、新增表单input类型："></a>1、新增表单input类型：</h3><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-31_at_05.09.29.png" alt="Screen Shot 0004-05-31 at 05.09.29.png"></p><h3 id="2、新增的表单属性"><a href="#2、新增的表单属性" class="headerlink" title="2、新增的表单属性"></a>2、新增的表单属性</h3><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-31_at_05.11.39.png" alt="Screen Shot 0004-05-31 at 05.11.39.png"></p><p>通过下面方式设定placeholder提示字体颜色：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::placeholder</span> &#123; <span class="attribute">color</span>:pink;&#125;</span><br></pre></td></tr></table></figure><h2 id="二、CSS3的新特性"><a href="#二、CSS3的新特性" class="headerlink" title="二、CSS3的新特性"></a>二、CSS3的新特性</h2><p>CSS3的现状：</p><ul><li>新增的CSS3特性有兼容性的问题，ie9+支持</li><li>移动端的支持优于PC端</li><li>不断改进中</li><li>应用相对广泛</li><li>现阶段：新增的选择器和盒子模型以及其他。</li></ul><h2 id="（一）、CSS3新增选择器"><a href="#（一）、CSS3新增选择器" class="headerlink" title="（一）、CSS3新增选择器"></a>（一）、CSS3新增选择器</h2><h3 id="1、属性选择器"><a href="#1、属性选择器" class="headerlink" title="1、属性选择器"></a>1、属性选择器</h3><p>属性选择器可以借助元素的特定属性选择元素，这样就可以不用借助于类选择或者id选择器</p><p>属性选择器的权重为10，和类选择器权重一样。</p><p>属性选择器必须将标签名和属性或者属性值使用中括号包含起来。</p><p>下面五种属性选择器的使用方法：</p><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-31_at_22.24.59.png" alt="Screen Shot 0004-05-31 at 22.24.59.png"></p><h3 id="2、结构伪类选择器"><a href="#2、结构伪类选择器" class="headerlink" title="2、结构伪类选择器"></a>2、结构伪类选择器</h3><p>结构伪类选择器根据文档结构选择元素，常用于根据父级选择里面的字元素。</p><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-31_at_22.29.32.png" alt="Screen Shot 0004-05-31 at 22.29.32.png"></p><p>nth-child(n) 选择某个父元素的一个或者多个特性的字元素</p><ul><li>n可以是数字，关键字和公式</li><li>n如果是数字，就是选择第n个子元素里面数字从1开始</li><li>n可以是关键字：even是偶数，odd是奇数</li><li><p>n可以是公式：常见的公式如下（如果n是公式，则从0开始计算，但是第0个元素或者超出了元素的个数会被忽略。）</p><p>  <img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-05-31_at_22.43.27.png" alt="Screen Shot 0004-05-31 at 22.43.27.png"></p></li></ul><p><strong>nth-of-type(n)和nth-child(n)的区别：</strong></p><ol><li>E:nth-child(n)对父元素里面所有的孩子排序选择，先找到第n个孩子，然后看看是否和E匹配，如果不匹配不会选择任何元素。</li><li>E:nth-of-type(n)对父元素里面指定的子元素进行排序，先匹配元素E，然后再找第n个元素。</li></ol><h3 id="小结："><a href="#小结：" class="headerlink" title="小结："></a>小结：</h3><ul><li>结构伪类选择器一般用于选择父级里面的第几个孩子</li><li>关于 nth-child(n) 我们要知道 n 是从 0 开始计算的，要记住常用的公式</li><li>无序列表，我们肯定用 nth-child 更多。</li><li>类选择器、属性选择器、伪类选择器，权重为 10。</li></ul><h3 id="3、伪元素选择器"><a href="#3、伪元素选择器" class="headerlink" title="3、伪元素选择器"></a>3、伪元素选择器</h3><p>伪元素选择器可以利用CSS创建新标签元素，而不需要html标签（故为伪元素），从而简化HTML结构。</p><p><img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-06-01_at_03.28.04.png" alt="Screen Shot 0004-06-01 at 03.28.04.png"></p><h3 id="Notice：-1"><a href="#Notice：-1" class="headerlink" title="Notice："></a>Notice：</h3><ul><li>before和after创建一个新元素，但是属于行内元素</li><li>新创建的元素在HTML文档树中找不到，所以称为伪元素。</li><li>语法：element::before { content: “”}</li><li>before 和 after 必须有content属性</li><li>before在父元素的内容前面创建元素，after在父元素的内容后面创建元素</li><li>伪元素选择器和标签选择器的权重一样是1。</li></ul><h3 id="使用伪元素选择器简化html文档结构："><a href="#使用伪元素选择器简化html文档结构：" class="headerlink" title="使用伪元素选择器简化html文档结构："></a>使用伪元素选择器简化html文档结构：</h3><ol><li>使用iconfont来丰富样式</li><li>土豆视频遮罩</li><li><p>伪元素清楚浮动</p><p> 清除浮动的本质是在父元素的尾部添加一个样式为clear:both的块级盒子（额外标签法）</p><p> 使用::after伪元素选择器可以简单取代上面的做法：</p></li></ol><pre><code><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line"><span class="attribute">content</span>:<span class="string">&quot;&quot;</span>                 伪元素必须属性</span><br><span class="line">display:block              转化为块级元素</span><br><span class="line">height:<span class="number">0px</span>;                高度为<span class="number">0</span></span><br><span class="line"><span class="attribute">clear</span>:both;                清除浮动核心代码</span><br><span class="line"><span class="attribute">visibility</span>:hidden;         可见性为隐藏</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>**双伪元素清楚浮动：**这是上面的一种优化，给浮动的盒子闭合浮动，达到更好的清楚浮动的效果。<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.cleanfix</span><span class="selector-pseudo">::before</span>, <span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line"><span class="attribute">content</span>:<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="attribute">display</span>:table;      转为块级元素并一行显示，因为浮动是一行显示，如果转为block的话就是上下显示。</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line"><span class="attribute">clear</span>:both;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></code></pre><h2 id="（二）、盒子模型"><a href="#（二）、盒子模型" class="headerlink" title="（二）、盒子模型"></a>（二）、盒子模型</h2><p>CSS3中可以通过 box-sizing 属性来指定盒模型，有2个值:即可指定为 content-box、border-box，这样我们计算盒子大小的方式就发生了改变。</p><ol><li>box-sizing: content-box  盒子大小为width+padding+border （以前默认的）</li><li>box-sizing: border-box 盒子大小为width（这种情况下padding和border就不会撑大盒子，前提是padding和border不会超过width宽度）</li></ol><h2 id="（三）、其他特性"><a href="#（三）、其他特性" class="headerlink" title="（三）、其他特性"></a>（三）、其他特性</h2><h3 id="1、图片变模糊（filter属性）"><a href="#1、图片变模糊（filter属性）" class="headerlink" title="1、图片变模糊（filter属性）"></a>1、图片变模糊（filter属性）</h3><p>filter：函数（）； 例如：filter: blur（5px）； blur模糊处理，数据越大越模糊</p><h3 id="2、计算盒子的宽度width：calc（）函数："><a href="#2、计算盒子的宽度width：calc（）函数：" class="headerlink" title="2、计算盒子的宽度width：calc（）函数："></a>2、计算盒子的宽度width：calc（）函数：</h3><p>width: calc( 100%-30px); </p><p>calc函数中可以使用+ - * / 来进行计算</p><h3 id="3、CSS3过渡（transition）"><a href="#3、CSS3过渡（transition）" class="headerlink" title="3、CSS3过渡（transition）"></a>3、CSS3过渡（transition）</h3><p>过渡(transition)是CSS3中具有颠覆性的特征之一，我们可以在不使用 Flash 动画或 JavaScript 的情况下，当元素从一种样式变换为另一种样式时为元素添加效果。</p><h3 id="过渡应该加在哪里：谁做过渡给谁加。（哪个元素要过渡效果就给谁加）"><a href="#过渡应该加在哪里：谁做过渡给谁加。（哪个元素要过渡效果就给谁加）" class="headerlink" title="过渡应该加在哪里：谁做过渡给谁加。（哪个元素要过渡效果就给谁加）"></a><strong>过渡应该加在哪里：谁做过渡给谁加。</strong>（哪个元素要过渡效果就给谁加）</h3><p>经常和 : hover 一起搭配使用</p><p>transition：要过渡的属性 花费时间 运动曲线 何时开始；</p><ol><li>要过渡的属性：想要变化的属性，宽度高度背景内外边距都可以，如果想要所有的属性都变化过度，写一个all就可以：transition：all 0.5s；</li><li>花费时间：必须加单位秒 s </li><li><p>运动曲线：默认是ease（可以省略）</p><ul><li>匀速：linear</li><li>逐渐慢下来：ease</li><li>加速：ease- in</li><li>减速： ease-out</li><li><p>先减速再加速：ease-in-out</p><p>  <img src="CSS%E5%AD%A6%E4%B9%A0%203b0fde63246a47dfa2cc702a26fd734a/Screen_Shot_0004-06-01_at_23.56.51.png" alt="Screen Shot 0004-06-01 at 23.56.51.png"></p></li></ul></li><li><p>何时开始：单位是秒 s ，可以设置延迟触发时间，默认是0s（可以省略）</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：学习黑马前端的笔记，课程学习请访问B站&lt;a href=&quot;https://www.bilibili.com/video/BV14J4114768?vd_source=0a7e7a89126208016b0448e9492b9156&quot;&gt;黑马程序员pink老师前端入门教程&lt;/a&gt;</summary>
    
    
    
    <category term="Front-end" scheme="https://www.solen.ml/categories/Front-end/"/>
    
    
    <category term="CSS" scheme="https://www.solen.ml/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>jiujiujiu</title>
    <link href="https://www.solen.ml/2022/06/22/jiujiujiu/"/>
    <id>https://www.solen.ml/2022/06/22/jiujiujiu/</id>
    <published>2022-06-22T09:49:48.000Z</published>
    <updated>2022-06-22T09:52:04.281Z</updated>
    
    <content type="html"><![CDATA[<p>jiujiujiud文章介绍<span id="more"></span><br>正文开始：</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;jiujiujiud文章介绍</summary>
    
    
    
    <category term="xindefenlei" scheme="https://www.solen.ml/categories/xindefenlei/"/>
    
    
    <category term="xinde biaoqian" scheme="https://www.solen.ml/tags/xinde-biaoqian/"/>
    
  </entry>
  
  <entry>
    <title>mmama</title>
    <link href="https://www.solen.ml/2022/06/22/mmama/"/>
    <id>https://www.solen.ml/2022/06/22/mmama/</id>
    <published>2022-06-21T18:17:31.000Z</published>
    <updated>2022-06-21T18:20:42.812Z</updated>
    
    <content type="html"><![CDATA[<p>kaishiyiduanshenmizhilv<span id="more"></span><br>正文开始：</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;kaishiyiduanshenmizhilv</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>zhelihaomei</title>
    <link href="https://www.solen.ml/2022/06/22/zhelihaomei/"/>
    <id>https://www.solen.ml/2022/06/22/zhelihaomei/</id>
    <published>2022-06-21T18:10:08.000Z</published>
    <updated>2022-06-21T18:10:08.483Z</updated>
    
    <content type="html"><![CDATA[<p>文章描述<span id="more"></span><br>正文开始：</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;文章描述</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>myphoto</title>
    <link href="https://www.solen.ml/2022/06/22/myphoto/"/>
    <id>https://www.solen.ml/2022/06/22/myphoto/</id>
    <published>2022-06-21T16:47:28.269Z</published>
    <updated>2022-06-21T16:47:28.269Z</updated>
    
    
    
    
    <category term="photo" scheme="https://www.solen.ml/categories/photo/"/>
    
    
  </entry>
  
  <entry>
    <title>hhahai</title>
    <link href="https://www.solen.ml/2022/06/22/hhahai/"/>
    <id>https://www.solen.ml/2022/06/22/hhahai/</id>
    <published>2022-06-21T16:42:18.000Z</published>
    <updated>2022-06-21T16:42:18.412Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>s</title>
    <link href="https://www.solen.ml/2022/06/22/s/"/>
    <id>https://www.solen.ml/2022/06/22/s/</id>
    <published>2022-06-21T16:19:11.000Z</published>
    <updated>2022-06-21T16:21:09.115Z</updated>
    
    
    
    
    <category term="文件" scheme="https://www.solen.ml/categories/%E6%96%87%E4%BB%B6/"/>
    
    
    <category term="标签测试" scheme="https://www.solen.ml/tags/%E6%A0%87%E7%AD%BE%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="https://www.solen.ml/2022/06/22/test/"/>
    <id>https://www.solen.ml/2022/06/22/test/</id>
    <published>2022-06-21T16:13:37.000Z</published>
    <updated>2022-06-21T16:16:43.947Z</updated>
    
    
    
    
    <category term="xinde" scheme="https://www.solen.ml/categories/xinde/"/>
    
    
    <category term="biaqoa" scheme="https://www.solen.ml/tags/biaqoa/"/>
    
  </entry>
  
  <entry>
    <title>test article</title>
    <link href="https://www.solen.ml/2022/06/22/test-article/"/>
    <id>https://www.solen.ml/2022/06/22/test-article/</id>
    <published>2022-06-21T16:09:01.000Z</published>
    <updated>2022-06-21T16:09:01.160Z</updated>
    
    
    
    
    
  </entry>
  
</feed>
